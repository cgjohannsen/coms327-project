
dungeon.c,339
char *file_type file_type42,843
uint32_t file_version 43,877
uint16_t num_rooms 44,915
int init_dungeon(50,1075
int place_rooms(68,1402
int place_corridors(108,2585
int place_stairs(132,3138
int gen_dungeon(165,4113
int write_char_arr(178,4330
int display_dungeon(217,5211
int write_dungeon(234,5521
int read_dungeon(288,7161

dungeon.h,1243
# define DUNGEON_H2,18
# define DUNGEON_Y 12,162
# define DUNGEON_X 13,185
# define MIN_ROOMS 14,208
# define MAX_ROOMS 15,230
# define MAX_UP 16,253
# define MAX_DOWN 17,275
# define ROOM_MIN_X 18,297
# define ROOM_MIN_Y 19,319
# define ROOM_MAX_X 20,341
# define ROOM_MAX_Y 21,364
# define MAX_BUFFER 22,387
typedef struct room 24,413
  uint8_t x;25,435
  uint8_t y;26,448
  uint8_t width;27,461
  uint8_t height;28,478
} room_t;29,496
typedef struct stair 31,507
  uint8_t x;32,530
  uint8_t y;33,543
  char dir;34,556
} stair_t;35,568
typedef struct pc 37,580
} pc_t;39,603
typedef struct npc 41,612
  int characterstics;42,633
} npc_t;43,655
typedef struct character 45,665
  pc_t *pc;pc46,692
  npc_t *npc;npc47,704
  uint8_t x;48,718
  uint8_t y;49,731
  uint8_t speed;50,744
  char symbol;51,761
} character_t;52,776
typedef struct dungeon 54,792
  uint16_t num_rooms;55,817
  room_t *rooms;rooms56,839
  stair_t *u_stairs;u_stairs57,856
  stair_t *d_stairs;d_stairs58,877
  uint16_t num_up;59,898
  uint16_t num_down;60,917
  character_t pc;61,938
  character_t *characters[characters62,956
  uint8_t hardness[hardness63,1005
  char char_arr[char_arr64,1047
} dungeon_t;65,1086

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

pathfinder.c,274
#define DUNGEON_X 9,123
#define DUNGEON_Y 10,144
#define x 11,165
#define y 12,185
heap_t heap;14,206
static int32_t path_cmp(16,220
int pathfinder_init(20,360
int pathfinder_dijkstra_floor(37,708
int pathfinder_dijkstra_all(146,4479
int pathfinder_print(275,8966

pathfinder.h,258
# define PATHFINDER_H2,21
# define DUNGEON_X 7,85
# define DUNGEON_Y 8,107
typedef struct dungeon_path{dungeon_path10,130
  heap_node_t *hn;hn11,159
  uint8_t pos[pos12,178
  uint8_t from[from13,196
  int32_t cost;14,215
} dungeon_path_t;15,231

rlg327.c,122
#define DUNGEON_Y 8,111
#define DUNGEON_X 9,133
dungeon_t dungeon;11,156
int pathfind_dungeon(13,176
int main(28,536
