
Character.h,472
# define CHARACTER_H2,20
class Character{Character10,99
  enum Color{Color14,126
    red,15,140
    green,16,149
    blue,17,160
    cyan,18,170
    yellow,19,180
    magenta,20,192
    white,21,205
    black22,216
  uint8_t is_pc;25,232
  heap_node_t *hn;hn26,249
  uint8_t isAlive;27,268
  uint8_t speed;28,287
  uint32_t move_time;29,304
  char symbol;30,326
  uint8_t x;31,341
  uint8_t y;32,354
  uint8_t next_x;33,367
  uint8_t next_y;34,385

Dice.h,123
# define DICE_H2,15
class Dice 4,32
	int base,8,56
	int base, num,8,56
	int base, num, sides;8,56
	char str[str9,79

Dungeon.h,1484
# define DUNGEON_H2,18
# define DUNGEON_Y 18,275
# define DUNGEON_X 19,300
# define MIN_ROOMS 20,325
# define MAX_ROOMS 21,349
# define MIN_UP 22,374
# define MIN_DOWN 23,398
# define MAX_UP 24,422
# define MAX_DOWN 25,446
# define ROOM_MIN_X 26,471
# define ROOM_MIN_Y 27,495
# define ROOM_MAX_X 28,519
# define ROOM_MAX_Y 29,544
# define MAX_BUFFER 30,569
# define MAX_MONSTERS 31,596
class Dungeon 34,623
	const std::string file_type 38,650
	uint32_t file_version 39,697
	uint32_t file_version = 0, file_size;39,697
	enum terrain 41,737
  		ter_wall,42,753
  		ter_immutable,43,767
  		ter_floor,44,786
  		ter_corridor,45,801
  		ter_stair_up,46,819
  		ter_stair_down,47,837
  		ter_unknown48,857
	class room 51,878
  		uint8_t x;53,901
  		uint8_t y;54,916
  		uint8_t width;55,931
  		uint8_t height;56,950
	class stair 59,975
  		uint8_t x;61,999
  		uint8_t y;62,1014
  		char dir;63,1029
	std::string message;66,1048
	uint16_t num_rooms;67,1070
	room *rooms;rooms68,1091
	uint16_t num_up;69,1105
	uint16_t num_down;70,1123
	stair *u_stairs;u_stairs71,1143
	stair *d_stairs;d_stairs72,1161
	uint16_t nummon;73,1179
	PC player;74,1197
	Character *characters[characters75,1209
	Pathfinder floor_pathfinder;76,1255
	Pathfinder all_pathfinder;77,1285
	uint8_t hardness[hardness78,1313
	terrain map[map79,1354
	terrain seen[seen80,1390
	char output[output81,1427
	std::vector<MonsterTemplate> monster_templates;82,1463

IO.h,226
# define IO_H2,13
# define DUNGEON_X 6,52
# define DUNGEON_Y 7,74
# define DISPLAY_ALL_CMD 9,97
# define DISPLAY_MAP_CMD 10,130
# define DISPLAY_MONSTERS_CMD 11,163
# define DISPLAY_TELEPORT_CMD 12,196
class IO 14,230

MonsterTemplate.h,340
# define MONSTERTEMPLATE_H2,26
class MonsterTemplate{MonsterTemplate11,155
	std::string name;15,189
	std::string description;16,208
	std::vector<Character::Color> color;17,234
	Dice speed;18,272
	std::vector<NPC::Ability> abilities;19,285
	Dice hitpoints;20,323
	Dice attack_damage;21,340
	char symbol;22,361
	int rarity;23,375

NPC.h,314
# define NPC_H2,14
class NPC 8,79
	uint16_t characteristics;12,120
	uint8_t last_seen_x;13,147
	uint8_t last_seen_y;14,169
	enum Ability{Ability18,201
		smart,19,216
		telepathic,20,225
		tunneling,21,239
		erratic,22,252
		pass,23,263
		pickup,24,271
		destroy,25,281
		unique,26,292
		boss27,302

PC.h,69
# define PC_H2,13
typedef struct heap heap_t;8,74
class PC 12,119

Pathfinder.h,317
# define PATHFINDER_H2,21
# define DUNGEON_X 7,84
# define DUNGEON_Y 8,106
class Pathfinder{Pathfinder10,129
	class dungeon_path{dungeon_path14,157
		heap_node_t *hn;hn16,187
 		uint8_t pos[pos17,206
 		uint8_t from[from18,225
 		int32_t cost;19,245
	uint8_t h[h22,267
	dungeon_path path[path23,301

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6737
char *print_int(print_int348,6836
int main(357,6954

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301
