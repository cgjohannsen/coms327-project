
character.h,303
# define CHARACTER_H2,20
class character{character10,99
  uint8_t is_pc;14,126
  heap_node_t *hn;hn15,143
  uint8_t isAlive;16,162
  uint8_t speed;17,181
  uint32_t move_time;18,198
  char symbol;19,220
  uint8_t x;20,235
  uint8_t y;21,248
  uint8_t next_x;22,261
  uint8_t next_y;23,279

dungeon.h,1425
# define DUNGEON_H2,18
# define DUNGEON_Y 16,226
# define DUNGEON_X 17,251
# define MIN_ROOMS 18,276
# define MAX_ROOMS 19,300
# define MIN_UP 20,325
# define MIN_DOWN 21,349
# define MAX_UP 22,373
# define MAX_DOWN 23,397
# define ROOM_MIN_X 24,422
# define ROOM_MIN_Y 25,446
# define ROOM_MAX_X 26,470
# define ROOM_MAX_Y 27,495
# define MAX_BUFFER 28,520
# define MAX_MONSTERS 29,547
class dungeon 33,575
	const std::string file_type 37,602
	uint32_t file_version 38,649
	uint32_t file_version = 0, file_size;38,649
	enum terrain 42,698
  		ter_wall,43,714
  		ter_immutable,44,728
  		ter_floor,45,747
  		ter_corridor,46,762
  		ter_stair_up,47,780
  		ter_stair_down,48,798
  		ter_unknown49,818
	class room 52,839
  		uint8_t x;54,862
  		uint8_t y;55,877
  		uint8_t width;56,892
  		uint8_t height;57,911
	class stair 60,936
  		uint8_t x;62,960
  		uint8_t y;63,975
  		char dir;64,990
	std::string message;67,1009
	uint16_t num_rooms;68,1031
	room *rooms;rooms69,1052
	uint16_t num_up;70,1066
	uint16_t num_down;71,1084
	stair *u_stairs;u_stairs72,1104
	stair *d_stairs;d_stairs73,1122
	uint16_t nummon;74,1140
	pc player;75,1158
	character *characters[characters76,1170
	pathfinder floor_pathfinder;77,1216
	pathfinder all_pathfinder;78,1246
	uint8_t hardness[hardness79,1274
	terrain map[map80,1315
	terrain seen[seen81,1351
	char output[output82,1388

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6737
char *print_int(print_int348,6836
int main(357,6954

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,226
# define IO_H2,13
# define DUNGEON_X 6,51
# define DUNGEON_Y 7,73
# define DISPLAY_ALL_CMD 9,96
# define DISPLAY_MAP_CMD 10,129
# define DISPLAY_MONSTERS_CMD 11,162
# define DISPLAY_TELEPORT_CMD 12,195
class io 14,229

npc.h,69
# define NPC_H2,14
class npc 6,55
	uint16_t characteristics;10,96

pathfinder.h,317
# define PATHFINDER_H2,21
# define DUNGEON_X 7,84
# define DUNGEON_Y 8,106
class pathfinder{pathfinder10,129
	class dungeon_path{dungeon_path14,157
		heap_node_t *hn;hn16,187
 		uint8_t pos[pos17,206
 		uint8_t from[from18,225
 		int32_t cost;19,245
	uint8_t h[h22,267
	dungeon_path path[path23,301

pc.h,69
# define PC_H2,13
typedef struct heap heap_t;8,74
class pc 12,119
